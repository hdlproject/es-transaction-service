version: '3.1'

services:
  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    networks:
      - mongo
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${EVENT_STORAGE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${EVENT_STORAGE_PASSWORD}
    env_file:
      - .env
  mongo-express:
    image: mongo-express:latest
    ports:
      - 8082:8081
    networks:
      - mongo
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo:27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${EVENT_STORAGE_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${EVENT_STORAGE_PASSWORD}
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:latest
    networks:
      - rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${EVENT_BUS_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${EVENT_BUS_PASSWORD}
    env_file:
      - .env

  postgresql:
    image: postgres:latest
    volumes:
      - postgresql-data:/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    networks:
      - postgresql
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-server:latest
    container_name: kafka
    networks:
      - kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_MIN_INSYNC_REPLICAS: 1

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:latest
    container_name: ksqldb-server
    networks:
      - kafka
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8088:8088
    volumes:
      - ./init-ksqldb.sql:/init-ksqldb.sql
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_SINK_REPLICAS: 1
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
#      KSQL_KSQL_QUERIES_FILE: /init-ksqldb.sql # uncomment if you want to use headless mode
#      KSQL_KSQL_STREAMS_PROCESSING_GUARANTEE: exactly_once

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:latest
    container_name: ksqldb-cli
    networks:
      - kafka
    depends_on:
      - kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    networks:
#      - kafka
#    depends_on:
#      - kafka
#    ports:
#      - 8080:8080
#    environment:
#      DYNAMIC_CONFIG_ENABLED: 'true'
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    networks:
      - kafka
    depends_on:
      - kafka
      - ksqldb-server
      - schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb-server:8088
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://localhost:8088
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    networks:
      - kafka
    depends_on:
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

volumes:
  postgresql-data:
    driver: local
  mongo-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-log:
    driver: local

networks:
  mongo:
    driver: bridge
  postgresql:
    driver: bridge
  rabbitmq:
    driver: bridge
  kafka:
    driver: bridge
